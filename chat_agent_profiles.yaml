agent_profiles:
  rag_agent:
    class_qualname: just_agents.web.chat_ui_agent.ChatUIAgent
    display_name: üïµ RAG Agent
    description: RAG agent to deal with semantic search
    hidden: true
    assistant_index: 70
    tools: # List of tools available to this agent. These will be automatically imported.
      - package: "just_semantic_search.meili.tools" # Corresponds to tools/toy_tools.py.
        function: "search_documents" # Function available within the tool.
      - package: "just_semantic_search.meili.tools"
        function: "all_indexes"
    llm_options:
      model: groq/llama-3.3-70b-versatile
      temperature: 0.0
    system_prompt: | 
      The 'search_documents' tool uses semantic search and only accepts indexes provided by 'all_indexes' tool.
      You can only get indexes names from 'all_indexes' tool and search indexes only listed by it. 
      Do not invent indexes that do not exist, select most suitable index automatically, unless user specifically asks for an index. 
        
      You MUST ALWAYS provide sources for all the documents. Each evidence quote must be followed by the source (you use the source field and do not invent your own sources or quotation format). 
      If you summarize from multiple documents, you MUST provide sources for each document (after each evidence quote, not in the end) that you used in your answer.
      You MUST ALWAYS explicitly explain which part of your answer you took from documents and which part you took from your knowledge.
      YOU NEVER CALL THE TOOL WITH THE SAME PARAMETERS MORE THAN ONCE.

  annotation_agent:
    class_qualname: just_agents.web.chat_ui_agent.ChatUIAgent
    display_name: üìù Annotation Agent
    description: Annotation agent to deal with annotation
    hidden: true
    assistant_index: 71
    llm_options:
      model: groq/llama-3.3-70b-versatile
      temperature: 0.0
    system_prompt: |
        You are a paper annotator. You extract the abstract, authors and titles of the papers.
                Abstract and authors must be exactly he way they are in the paper, do not edit them.
                You provide your output as json object of the following JSON format:
                {
                    "abstract": "...",
                    "authors": ["...", "..."],
                    "title": "...",
                    "source": "..."
                }
                Make sure to provide the output in the correct format, do not add any other text or comments, do not add ```json or other surrounding. 
                If you cannot find authors provide an empty list.
                For string either use one line or use proper escape characters (\n) for line breaks
                Make sure to provide the output in the correct format, do not add any other text or comments.
                For source you either give DOI, pubmed or filename (if doi or pubmed is not available).
                File filename you give a filename of the file in the folder together with the extension.

  sugar_genie: # Short agent identifier in snake_case format.
    class_qualname: just_agents.web.chat_ui_agent.ChatUIAgent # For web agents, always use this class name.
    display_name: üç¨ A Blood Sugar Prediction Genie # Name displayed in the UI.
    assistant_index: 20 # Determines the agent's position in the selection list. The first agent is set as the default.
    llm_options: # Configuration options for the language model.
      # tools: []  # Do not set tools here! They should be configured separately.
      api_base: https://api.groq.com/openai/v1 # API endpoint URL.
      model: groq/llama-3.3-70b-versatile # Specifies the model provider and name.
      temperature: 0.0 # Controls response randomness (0.0 = deterministic).
      tool_choice: auto # Automatically selects tools when applicable.
    examples: # Sample user queries for reference.
      - prompt: Why are glucose prediction models important?
        title: Glucose Level Prediction

    system_prompt: | # System prompt defining the AI's role and behavior.
       You are a Glucose Level Prediction Advisor.

  
  chat_naming_agent: # Fallback agent used for naming chats in the UI‚Äôs sidebar.
    class_qualname: just_agents.web.chat_ui_agent.ChatUIAgent
    display_name: üìú Chat Naming Agent # UI display name.
    description: Generates chat titles based on user queries.
    assistant_index: 99 # This agent is positioned last in the selection list.
    hidden: true
    llm_options:
      api_base: https://api.groq.com/openai/v1
      model: groq/llama-3.3-70b-versatile
      temperature: 0.7 # Allows more creative name generation.
    examples:
      - prompt: How are you today?
        title: Agent Name from Query
    system_prompt: | 
      You are a summarization AI. Your task is to condense user queries into a single short phrase of four words or fewer. 

      Do not attempt to answer the question‚Äîonly summarize it concisely. 
      Always begin your response with a relevant emoji that reflects the topic of the user's query.
name: Build RAG agent Docker Container

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        # Temporarily disable GPU and rag-chat builds
        variant: ['cpu'] # ['cpu', 'gpu']
        dockerfile: ['rag-server'] # ['rag-chat', 'rag-server']
        include:
          - variant: 'cpu'
            base_image: 'ghcr.io/longevity-genie/just-agents/chat-ui-agents:main'
            suffix: ''
            use_gpu: 'false'
          # - variant: 'gpu'
          #   base_image: 'ghcr.io/longevity-genie/just-agents/chat-ui-agents:main-gpu'
          #   suffix: '-gpu'
          #   use_gpu: 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.dockerfile }}
          tags: |
            type=raw,value=latest${{ matrix.suffix }}
            type=ref,event=branch,suffix=${{ matrix.suffix }}
            type=ref,event=pr,suffix=${{ matrix.suffix }}
            type=semver,pattern={{version}},suffix=${{ matrix.suffix }}
            type=sha,suffix=${{ matrix.suffix }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./server/containers/${{ matrix.dockerfile }}/Dockerfile
          push: true
          build-args: |
            base_image=${{ matrix.base_image }}
            USE_GPU=${{ matrix.use_gpu }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
